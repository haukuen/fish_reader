name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Windows x64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: fr.exe
            asset_name: fish_reader-${{ github.ref_name }}-windows-x64.zip

          # macOS x64 (Intel)
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: fr
            asset_name: fish_reader-${{ github.ref_name }}-macos-x64.tar.gz

          # macOS ARM64 (Apple Silicon)
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: fr
            asset_name: fish_reader-${{ github.ref_name }}-macos-arm64.tar.gz

          # Linux x64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: fr
            asset_name: fish_reader-${{ github.ref_name }}-linux-x64.tar.gz

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifact
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} .
            7z a ${{ matrix.asset_name }} ${{ matrix.artifact_name }}
          else
            chmod +x target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
            tar -czf ${{ matrix.asset_name }} -C target/${{ matrix.target }}/release/ ${{ matrix.artifact_name }}
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.asset_name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Fish Reader ${{ github.ref_name }}
          body: |
            ## 支持的平台
            - [Windows x64](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/fish_reader-${{ github.ref_name }}-windows-x64.zip)
            - [macOS x64 (Intel)](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/fish_reader-${{ github.ref_name }}-macos-x64.tar.gz)
            - [macOS ARM64 (Apple Silicon)](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/fish_reader-${{ github.ref_name }}-macos-arm64.tar.gz)
            - [Linux x64](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/fish_reader-${{ github.ref_name }}-linux-x64.tar.gz)
          draft: false
          prerelease: false
          files: |
            artifacts/fish_reader-${{ github.ref_name }}-windows-x64.zip/fish_reader-${{ github.ref_name }}-windows-x64.zip
            artifacts/fish_reader-${{ github.ref_name }}-macos-x64.tar.gz/fish_reader-${{ github.ref_name }}-macos-x64.tar.gz
            artifacts/fish_reader-${{ github.ref_name }}-macos-arm64.tar.gz/fish_reader-${{ github.ref_name }}-macos-arm64.tar.gz
            artifacts/fish_reader-${{ github.ref_name }}-linux-x64.tar.gz/fish_reader-${{ github.ref_name }}-linux-x64.tar.gz
